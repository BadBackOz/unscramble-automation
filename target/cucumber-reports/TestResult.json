[{"line":2,"elements":[{"start_timestamp":"2023-12-24T19:31:08.224Z","line":11,"name":"GetWords API invoked with invalid character '1'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/1","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":705650200,"status":"passed"},"before":[{"result":{"duration":1024300,"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '1'","match":{"arguments":[{"val":"'1'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"duration":1301800,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":1342300,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:08.941Z","line":12,"name":"GetWords API invoked with invalid character '!'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/!","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7688900,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '!'","match":{"arguments":[{"val":"'!'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"duration":1434600,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:08.954Z","line":13,"name":"GetWords API invoked with invalid character '@'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/@","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7681400,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '@'","match":{"arguments":[{"val":"'@'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:08.965Z","line":14,"name":"GetWords API invoked with invalid character '$'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/$","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7747700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '$'","match":{"arguments":[{"val":"'$'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"duration":1188700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:08.976Z","line":15,"name":"GetWords API invoked with invalid character '%'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/%","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6382700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '%'","match":{"arguments":[{"val":"'%'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:08.990Z","line":16,"name":"GetWords API invoked with invalid character '^'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/^","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7255200,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '^'","match":{"arguments":[{"val":"'^'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":1002400,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.000Z","line":17,"name":"GetWords API invoked with invalid character '&'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/&","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7506900,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '&'","match":{"arguments":[{"val":"'&'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.010Z","line":18,"name":"GetWords API invoked with invalid character '('","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;9","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/(","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6547800,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '('","match":{"arguments":[{"val":"'('","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.022Z","line":19,"name":"GetWords API invoked with invalid character ')'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;10","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/)","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6641200,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters ')'","match":{"arguments":[{"val":"')'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"duration":327700,"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.031Z","line":20,"name":"GetWords API invoked with invalid character '_'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;11","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/_","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6694100,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '_'","match":{"arguments":[{"val":"'_'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.041Z","line":21,"name":"GetWords API invoked with invalid character '+'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;12","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/+","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7589800,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '+'","match":{"arguments":[{"val":"'+'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.051Z","line":22,"name":"GetWords API invoked with invalid character '='","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;13","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/=","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6533400,"status":"passed"},"before":[{"result":{"duration":1096000,"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '='","match":{"arguments":[{"val":"'='","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"duration":1022400,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.062Z","line":23,"name":"GetWords API invoked with invalid character ';'","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;14","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/;","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":5983900,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters ';'","match":{"arguments":[{"val":"';'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"duration":1025400,"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.072Z","line":26,"name":"GetWords API invoked with valid characters","description":"","id":"scenarios-for-getwords-api;getwords-api-invoked-with-valid-characters","type":"scenario","keyword":"Scenario","steps":[{"output":["API Invoked: http://localhost:8080/getWords/e**t","Response: {\"message\":\"Total words unscrambled from 'e**t': 1599\",\"oneLetterWords\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"],\"twoLetterWords\":[\"Aa\",\"Ab\",\"Ac\",\"Ad\",\"Ae\",\"Af\",\"Ag\",\"Ah\",\"Ai\",\"Ak\",\"Al\",\"Am\",\"An\",\"Ao\",\"Ap\",\"Aq\",\"Ar\",\"As\",\"At\",\"Av\",\"Aw\",\"Ax\",\"Ay\",\"Az\",\"Ba\",\"Bb\",\"Bd\",\"Be\",\"Bf\",\"Bg\",\"Bi\",\"Bk\",\"Bl\",\"Bm\",\"Bn\",\"Bo\",\"Bp\",\"Br\",\"Bs\",\"Bt\",\"Bu\",\"Bv\",\"Bx\",\"By\",\"Bz\",\"Ca\",\"Cb\",\"Cc\",\"Cd\",\"Ce\",\"Cf\",\"Cg\",\"Ch\",\"Ck\",\"Cl\",\"Cm\",\"Co\",\"Cp\",\"Cq\",\"Cr\",\"Cs\",\"Ct\",\"Cu\",\"Cv\",\"Cy\",\"Da\",\"Db\",\"Dc\",\"Dd\",\"De\",\"Dg\",\"Di\",\"Dj\",\"Dk\",\"Dl\",\"Dm\",\"Dn\",\"Do\",\"Dp\",\"Dr\",\"Ds\",\"Dt\",\"Du\",\"Dx\",\"Dy\",\"Dz\",\"Ea\",\"Ec\",\"Ed\",\"Ee\",\"Ef\",\"Eg\",\"Eh\",\"El\",\"Em\",\"En\",\"Eo\",\"Ep\",\"Eq\",\"Er\",\"Es\",\"Et\",\"Eu\",\"Ew\",\"Ex\",\"Ey\",\"Fa\",\"Fb\",\"Fc\",\"Fe\",\"Ff\",\"Fg\",\"Fi\",\"Fl\",\"Fm\",\"Fn\",\"Fo\",\"Fp\",\"Fr\",\"Fs\",\"Ft\",\"Fu\",\"Fv\",\"Fw\",\"Fy\",\"Fz\",\"Ga\",\"Gd\",\"Ge\",\"Gi\",\"Gl\",\"Gm\",\"Gn\",\"Go\",\"Gp\",\"Gr\",\"Gs\",\"Gt\",\"Gu\",\"Gv\",\"Ha\",\"Hb\",\"Hd\",\"He\",\"Hf\",\"Hg\",\"Hi\",\"Hl\",\"Hm\",\"Ho\",\"Hp\",\"Hq\",\"Hr\",\"Hs\",\"Ht\",\"Hu\",\"Hv\",\"Hw\",\"Hy\",\"Ia\",\"Ib\",\"Ic\",\"Id\",\"Ie\",\"If\",\"Ii\",\"Ik\",\"Il\",\"Im\",\"In\",\"Io\",\"Iq\",\"Ir\",\"Is\",\"It\",\"Iv\",\"Iw\",\"Ix\",\"Ja\",\"Jg\",\"Ji\",\"Jo\",\"Jr\",\"Js\",\"Jt\",\"Ju\",\"Ka\",\"Kb\",\"Kc\",\"Kg\",\"Ki\",\"Kl\",\"Km\",\"Kn\",\"Ko\",\"Kr\",\"Kt\",\"Kv\",\"Kw\",\"Ky\",\"La\",\"Lb\",\"Lc\",\"Ld\",\"Le\",\"Lf\",\"Lg\",\"Lh\",\"Li\",\"Ll\",\"Lm\",\"Ln\",\"Lo\",\"Lp\",\"Lr\",\"Ls\",\"Lt\",\"Lu\",\"Lv\",\"Lx\",\"Ly\",\"Ma\",\"Mb\",\"Mc\",\"Md\",\"Me\",\"Mf\",\"Mg\",\"Mh\",\"Mi\",\"Mk\",\"Ml\",\"Mm\",\"Mn\",\"Mo\",\"Mp\",\"Mr\",\"Ms\",\"Mt\",\"Mu\",\"Mv\",\"Mw\",\"My\",\"Na\",\"Nb\",\"Nd\",\"Ne\",\"Ng\",\"Ni\",\"Nj\",\"Nl\",\"Nm\",\"No\",\"Np\",\"Nr\",\"Ns\",\"Nt\",\"Nu\",\"Nv\",\"Ny\",\"Ob\",\"Oc\",\"Od\",\"Oe\",\"Of\",\"Og\",\"Oh\",\"Ok\",\"Ol\",\"Om\",\"On\",\"Op\",\"Or\",\"Os\",\"Ot\",\"Ow\",\"Ox\",\"Oy\",\"Oz\",\"Pa\",\"Pc\",\"Pd\",\"Pe\",\"Pf\",\"Pg\",\"Ph\",\"Pi\",\"Pk\",\"Pl\",\"Pm\",\"Po\",\"Pp\",\"Pq\",\"Pr\",\"Ps\",\"Pt\",\"Pu\",\"Qe\",\"Qh\",\"Ql\",\"Qm\",\"Qn\",\"Qp\",\"Qr\",\"Qs\",\"Qt\",\"Qu\",\"Qv\",\"Qy\",\"Ra\",\"Rc\",\"Rd\",\"Re\",\"Rf\",\"Rg\",\"Rh\",\"Rm\",\"Rn\",\"Ro\",\"Rs\",\"Rt\",\"Sa\",\"Sb\",\"Sc\",\"Sd\",\"Se\",\"Sf\",\"Sg\",\"Sh\",\"Si\",\"Sk\",\"Sl\",\"Sm\",\"Sn\",\"So\",\"Sp\",\"Sq\",\"Sr\",\"Ss\",\"St\",\"Su\",\"Sv\",\"Sw\",\"Ta\",\"Tb\",\"Tc\",\"Td\",\"Te\",\"Tg\",\"Th\",\"Ti\",\"Tk\",\"Tm\",\"Tn\",\"To\",\"Tp\",\"Tr\",\"Ts\",\"Tu\",\"Tv\",\"Tx\",\"Uc\",\"Ud\",\"Ug\",\"Uh\",\"Ui\",\"Um\",\"Un\",\"Up\",\"Ur\",\"Us\",\"Ut\",\"Ux\",\"Va\",\"Vb\",\"Vc\",\"Vd\",\"Vg\",\"Vi\",\"Vl\",\"Vo\",\"Vp\",\"Vr\",\"Vs\",\"Vt\",\"Vu\",\"Vv\",\"Wa\",\"Wb\",\"Wc\",\"Wd\",\"We\",\"Wf\",\"Wg\",\"Wh\",\"Wi\",\"Wk\",\"Wl\",\"Wm\",\"Wo\",\"Wr\",\"Ws\",\"Wt\",\"Wu\",\"Wy\",\"Xc\",\"Xd\",\"Xi\",\"Xr\",\"Xs\",\"Xu\",\"Xw\",\"Xx\",\"Ya\",\"Yd\",\"Ye\",\"Yi\",\"Ym\",\"Yn\",\"Yo\",\"Yr\",\"Ys\",\"Yt\",\"Za\",\"Zn\",\"Zo\",\"Zs\"],\"threeLetterWords\":[\"Abe\",\"Abt\",\"Ace\",\"Act\",\"Ade\",\"Aeq\",\"Aes\",\"Aer\",\"Aet\",\"Aft\",\"Age\",\"Agt\",\"Aht\",\"Ait\",\"Ake\",\"Ale\",\"Alt\",\"Ame\",\"Amt\",\"Ane\",\"Ant\",\"Ape\",\"Apt\",\"Are\",\"Art\",\"Ase\",\"Ast\",\"Ata\",\"Ate\",\"Ati\",\"Atm\",\"Att\",\"Ave\",\"Awe\",\"Axe\",\"Aye\",\"Bae\",\"Bat\",\"Bde\",\"Bea\",\"Bed\",\"Bec\",\"Bef\",\"Bee\",\"Beg\",\"Bel\",\"Ben\",\"Ber\",\"Bet\",\"Bes\",\"Bey\",\"Bit\",\"Bkt\",\"Boe\",\"Bot\",\"Bpt\",\"Btl\",\"Btu\",\"But\",\"Bvt\",\"Bye\",\"Cat\",\"Cee\",\"Cen\",\"Cep\",\"Che\",\"Cie\",\"Cit\",\"Coe\",\"Cot\",\"Cpt\",\"Cre\",\"Cst\",\"Ctf\",\"Cte\",\"Ctg\",\"Ctn\",\"Cto\",\"Ctr\",\"Cts\",\"Cue\",\"Cut\",\"Cwt\",\"Dae\",\"Dat\",\"Ddt\",\"Deb\",\"Dea\",\"Dec\",\"Def\",\"Dee\",\"Deg\",\"Dei\",\"Del\",\"Den\",\"Dem\",\"Dep\",\"Der\",\"Det\",\"Des\",\"Dev\",\"Dex\",\"Dew\",\"Dey\",\"Dft\",\"Die\",\"Dit\",\"Doe\",\"Dot\",\"Dpt\",\"Dtd\",\"Due\",\"Dwt\",\"Dye\",\"Ead\",\"Eam\",\"Ean\",\"Ear\",\"Eau\",\"Eat\",\"Ebb\",\"Ecb\",\"Eco\",\"Ecu\",\"Edh\",\"Edp\",\"Edo\",\"Eds\",\"Eel\",\"Een\",\"Eer\",\"Eff\",\"Efl\",\"Eft\",\"Efs\",\"Egg\",\"Ego\",\"Eir\",\"Eke\",\"Elb\",\"Ela\",\"Eld\",\"Elf\",\"Eli\",\"Ell\",\"Elk\",\"Elm\",\"Elt\",\"Els\",\"Eme\",\"Emf\",\"Emm\",\"Emp\",\"Ems\",\"Emu\",\"End\",\"Enc\",\"Eng\",\"Enl\",\"Ens\",\"Env\",\"Eof\",\"Eom\",\"Eon\",\"Eos\",\"Epa\",\"Epi\",\"Era\",\"Erd\",\"Erf\",\"Ere\",\"Erg\",\"Erk\",\"Ern\",\"Err\",\"Ers\",\"Esc\",\"Ese\",\"Esd\",\"Esq\",\"Esp\",\"Ess\",\"Esu\",\"Est\",\"Eta\",\"Etc\",\"Eth\",\"Ety\",\"Eva\",\"Eve\",\"Evg\",\"Ewe\",\"Exp\",\"Exr\",\"Ext\",\"Eye\",\"Eyl\",\"Eyn\",\"Eyr\",\"Fae\",\"Fat\",\"Fed\",\"Fec\",\"Fee\",\"Feh\",\"Fei\",\"Fen\",\"Fem\",\"Fer\",\"Fet\",\"Feu\",\"Few\",\"Fez\",\"Fey\",\"Fie\",\"Fit\",\"Fmt\",\"Foe\",\"Fot\",\"Frt\",\"Fth\",\"Fut\",\"Gae\",\"Gat\",\"Geb\",\"Gee\",\"Ged\",\"Gem\",\"Gel\",\"Geo\",\"Gen\",\"Ges\",\"Ger\",\"Get\",\"Gey\",\"Gez\",\"Gie\",\"Git\",\"Glt\",\"Got\",\"Gre\",\"Gtd\",\"Gtc\",\"Gte\",\"Gtt\",\"Gue\",\"Gut\",\"Gye\",\"Hae\",\"Hat\",\"Hed\",\"Hee\",\"Heh\",\"Hei\",\"Hel\",\"Hen\",\"Hem\",\"Hep\",\"Heo\",\"Her\",\"Het\",\"Hes\",\"Hex\",\"Hew\",\"Hey\",\"Hgt\",\"Hie\",\"Hit\",\"Hoe\",\"Hot\",\"Hts\",\"Hue\",\"Hut\",\"Hwt\",\"Hye\",\"Ice\",\"Ide\",\"Ife\",\"Ike\",\"Ile\",\"Int\",\"Ire\",\"Ise\",\"Ist\",\"Ita\",\"Itd\",\"Ito\",\"Its\",\"Ive\",\"Jat\",\"Jct\",\"Jed\",\"Jef\",\"Jee\",\"Jeg\",\"Jen\",\"Jem\",\"Jer\",\"Jet\",\"Jeu\",\"Jew\",\"Jnt\",\"Joe\",\"Jot\",\"Jut\",\"Kae\",\"Kat\",\"Kea\",\"Keb\",\"Kee\",\"Ked\",\"Keg\",\"Kef\",\"Ken\",\"Kep\",\"Ker\",\"Ket\",\"Key\",\"Kex\",\"Kie\",\"Kit\",\"Kue\",\"Kye\",\"Lat\",\"Lea\",\"Led\",\"Lee\",\"Leg\",\"Lei\",\"Lek\",\"Len\",\"Lep\",\"Leo\",\"Ler\",\"Let\",\"Les\",\"Lev\",\"Leu\",\"Lex\",\"Lew\",\"Ley\",\"Lie\",\"Lit\",\"Loe\",\"Lot\",\"Lst\",\"Ltr\",\"Lue\",\"Lut\",\"Lye\",\"Mae\",\"Mat\",\"Mea\",\"Mee\",\"Med\",\"Meg\",\"Mem\",\"Mel\",\"Meo\",\"Men\",\"Meq\",\"Mes\",\"Mer\",\"Meu\",\"Met\",\"Mew\",\"Mev\",\"Mgt\",\"Mit\",\"Mkt\",\"Moe\",\"Mot\",\"Mtd\",\"Mtg\",\"Mtn\",\"Mts\",\"Mtx\",\"Mut\",\"Nae\",\"Nat\",\"Neb\",\"Nea\",\"Ned\",\"Nef\",\"Nee\",\"Neg\",\"Nei\",\"Nek\",\"Nep\",\"Neo\",\"Net\",\"New\",\"Nit\",\"Not\",\"Nth\",\"Nut\",\"Nye\",\"Oat\",\"Obe\",\"Oct\",\"Ode\",\"Oes\",\"Oer\",\"Oft\",\"Oie\",\"Oke\",\"Ole\",\"One\",\"Ont\",\"Oot\",\"Ope\",\"Opt\",\"Ore\",\"Ort\",\"Ose\",\"Otc\",\"Oto\",\"Out\",\"Owe\",\"Owt\",\"Pat\",\"Pct\",\"Pea\",\"Ped\",\"Pee\",\"Peh\",\"Peg\",\"Pen\",\"Pep\",\"Per\",\"Pet\",\"Pes\",\"Pew\",\"Pht\",\"Pie\",\"Pit\",\"Pkt\",\"Pmt\",\"Poe\",\"Pot\",\"Ppt\",\"Pre\",\"Pst\",\"Pta\",\"Pte\",\"Ptg\",\"Ptp\",\"Pts\",\"Ptt\",\"Pty\",\"Put\",\"Pvt\",\"Pwt\",\"Pye\",\"Qat\",\"Qed\",\"Qtd\",\"Qto\",\"Qtr\",\"Qts\",\"Qty\",\"Que\",\"Rat\",\"Rct\",\"Reb\",\"Rea\",\"Red\",\"Rec\",\"Ref\",\"Ree\",\"Reh\",\"Reg\",\"Rei\",\"Rel\",\"Ren\",\"Rem\",\"Rep\",\"Req\",\"Ret\",\"Res\",\"Rev\",\"Rex\",\"Rew\",\"Rhe\",\"Rie\",\"Rit\",\"Rle\",\"Roe\",\"Rot\",\"Rpt\",\"Rte\",\"Rti\",\"Rtw\",\"Rue\",\"Rut\",\"Rye\",\"Sae\",\"Sat\",\"Sct\",\"Sea\",\"Sec\",\"See\",\"Sed\",\"Seg\",\"Sei\",\"Sem\",\"Sel\",\"Sen\",\"Seq\",\"Sep\",\"Ser\",\"Set\",\"Sew\",\"Sey\",\"Sex\",\"She\",\"Sht\",\"Sie\",\"Sit\",\"Slt\",\"Soe\",\"Sot\",\"Spt\",\"Sta\",\"Std\",\"Stg\",\"Stk\",\"Stm\",\"Str\",\"Stu\",\"Sty\",\"Sue\",\"Sye\",\"Tab\",\"Taa\",\"Tad\",\"Tae\",\"Tag\",\"Taj\",\"Tai\",\"Tal\",\"Tan\",\"Tam\",\"Tap\",\"Tao\",\"Tar\",\"Tat\",\"Tas\",\"Tav\",\"Tau\",\"Tax\",\"Taw\",\"Tay\",\"Tbs\",\"Tch\",\"Tck\",\"Tdr\",\"Tea\",\"Ted\",\"Tec\",\"Tef\",\"Tee\",\"Teg\",\"Tel\",\"Ten\",\"Tem\",\"Ter\",\"Tex\",\"Tew\",\"Tez\",\"Tfr\",\"Tgn\",\"Tgt\",\"Tha\",\"The\",\"Tho\",\"Thy\",\"Tib\",\"Tid\",\"Tic\",\"Tie\",\"Tig\",\"Til\",\"Tin\",\"Tim\",\"Tip\",\"Tit\",\"Tis\",\"Tiu\",\"Tji\",\"Tkt\",\"Tlo\",\"Tln\",\"Tlr\",\"Tmh\",\"Tng\",\"Tnt\",\"Tob\",\"Toa\",\"Tod\",\"Toe\",\"Tog\",\"Toi\",\"Tol\",\"Ton\",\"Tom\",\"Top\",\"Too\",\"Tor\",\"Tot\",\"Tos\",\"Tov\",\"Tou\",\"Tox\",\"Tow\",\"Toy\",\"Tpd\",\"Tpi\",\"Tph\",\"Tpk\",\"Tpm\",\"Tps\",\"Tra\",\"Trf\",\"Tri\",\"Trp\",\"Trs\",\"Trt\",\"Try\",\"Tsi\",\"Tsk\",\"Tsp\",\"Tst\",\"Tss\",\"Tty\",\"Tub\",\"Tua\",\"Tue\",\"Tug\",\"Tui\",\"Tun\",\"Tum\",\"Tup\",\"Tur\",\"Tut\",\"Tux\",\"Tuy\",\"Twa\",\"Twi\",\"Twp\",\"Two\",\"Txt\",\"Tye\",\"Tyg\",\"Typ\",\"Tyr\",\"Tyt\",\"Ugt\",\"Uit\",\"Uke\",\"Ule\",\"Ult\",\"Ume\",\"Ure\",\"Use\",\"Ust\",\"Uta\",\"Ute\",\"Uti\",\"Uts\",\"Utu\",\"Vat\",\"Vee\",\"Veg\",\"Vei\",\"Vel\",\"Ver\",\"Vet\",\"Vex\",\"Vie\",\"Voe\",\"Wae\",\"Wat\",\"Wea\",\"Web\",\"Wee\",\"Wed\",\"Wef\",\"Wei\",\"Wem\",\"Wen\",\"Wes\",\"Wer\",\"Wet\",\"Wey\",\"Wit\",\"Woe\",\"Wot\",\"Wut\",\"Wye\",\"Xat\",\"Xed\",\"Yat\",\"Yea\",\"Yee\",\"Yed\",\"Yeh\",\"Yeo\",\"Yen\",\"Yep\",\"Yes\",\"Yer\",\"Yet\",\"Yew\",\"Yex\",\"Yez\",\"Yoe\",\"Yot\",\"Zat\",\"Zea\",\"Zed\",\"Zee\",\"Zel\",\"Zek\",\"Zen\",\"Zep\",\"Zer\",\"Zit\"],\"fourLetterWords\":[\"Fret\",\"Fute\",\"Gaet\",\"Gate\",\"Geat\",\"Geet\",\"Gelt\",\"Gent\",\"Gest\",\"Gets\",\"Geta\",\"Gite\",\"Yate\",\"Gote\",\"Yeat\",\"Yelt\",\"Yeta\",\"Yest\",\"Yett\",\"Yeth\",\"Yeti\",\"Gret\",\"Yite\",\"Gyte\",\"Yote\",\"Haet\",\"Hate\",\"Heat\",\"Heft\",\"Hent\",\"Hert\",\"Heth\",\"Hete\",\"Hest\",\"Hewt\",\"Hote\",\"Zeta\",\"Zest\",\"Htel\",\"Hyte\",\"Item\",\"Itel\",\"Iten\",\"Iter\",\"Itea\",\"Jert\",\"Jets\",\"Jete\",\"Jest\",\"Jute\",\"Kate\",\"Keat\",\"Keet\",\"Kelt\",\"Kent\",\"Kept\",\"Keto\",\"Ketu\",\"Keta\",\"Khet\",\"Kite\",\"Kmet\",\"Knet\",\"Kyte\",\"Laet\",\"Late\",\"Leat\",\"Lect\",\"Leet\",\"Left\",\"Lent\",\"Leto\",\"Lets\",\"Lett\",\"Lete\",\"Lest\",\"Lite\",\"Lote\",\"Lute\",\"Mate\",\"Meat\",\"Meet\",\"Melt\",\"Ment\",\"Mest\",\"Mets\",\"Meta\",\"Mete\",\"Meth\",\"Mite\",\"Moet\",\"Mote\",\"Mtge\",\"Mute\",\"Nate\",\"Neat\",\"Neet\",\"Nett\",\"Nets\",\"Neth\",\"Nete\",\"Neti\",\"Nest\",\"Neut\",\"Next\",\"Newt\",\"Note\",\"Nyet\",\"Oket\",\"Pate\",\"Peat\",\"Pelt\",\"Pent\",\"Pert\",\"Pets\",\"Peto\",\"Petr\",\"Pete\",\"Pest\",\"Piet\",\"Poet\",\"Pote\",\"Pret\",\"Quet\",\"Rate\",\"Rect\",\"Reet\",\"Regt\",\"Reft\",\"Reit\",\"Rent\",\"Rept\",\"Rets\",\"Rete\",\"Retd\",\"Rest\",\"Rhet\",\"Rite\",\"Rote\",\"Abet\",\"Adet\",\"Aget\",\"Ahet\",\"Sate\",\"Anet\",\"Ante\",\"Seat\",\"Sect\",\"Seit\",\"Selt\",\"Sent\",\"Sept\",\"Seta\",\"Sert\",\"Sets\",\"Sett\",\"Seth\",\"Aret\",\"Sext\",\"Arte\",\"Ates\",\"Aten\",\"Atef\",\"Ated\",\"Atle\",\"Atte\",\"Aute\",\"Site\",\"Sket\",\"Spet\",\"Stge\",\"Bate\",\"Stey\",\"Stew\",\"Stet\",\"Steg\",\"Ster\",\"Step\",\"Sten\",\"Stem\",\"Stre\",\"Stue\",\"Stye\",\"Suet\",\"Beat\",\"Beet\",\"Belt\",\"Bent\",\"Best\",\"Beth\",\"Bete\",\"Beta\",\"Bert\",\"Bets\",\"Bite\",\"Blet\",\"Tade\",\"Tace\",\"Taen\",\"Tael\",\"Tale\",\"Take\",\"Tane\",\"Tame\",\"Tape\",\"Tare\",\"Tate\",\"Tave\",\"Bote\",\"Tche\",\"Teat\",\"Tear\",\"Teas\",\"Teap\",\"Tead\",\"Tean\",\"Teal\",\"Team\",\"Teak\",\"Teda\",\"Tech\",\"Teco\",\"Teck\",\"Tebu\",\"Teca\",\"Teff\",\"Teet\",\"Teed\",\"Teer\",\"Tees\",\"Teen\",\"Teel\",\"Teem\",\"Teds\",\"Tegg\",\"Tegs\",\"Tega\",\"Teju\",\"Teil\",\"Tell\",\"Telt\",\"Tela\",\"Teli\",\"Tele\",\"Tens\",\"Tent\",\"Tend\",\"Teng\",\"Temp\",\"Tema\",\"Tepe\",\"Tepa\",\"Terr\",\"Tera\",\"Terp\",\"Term\",\"Tern\",\"Teri\",\"Teth\",\"Tete\",\"Test\",\"Tess\",\"Tewa\",\"Bret\",\"Teuk\",\"Text\",\"Tews\",\"Thae\",\"Thew\",\"They\",\"Thee\",\"Thed\",\"Thea\",\"Theb\",\"Theo\",\"Them\",\"Then\",\"Tide\",\"Tice\",\"Tier\",\"Ties\",\"Tied\",\"Tien\",\"Tige\",\"Bute\",\"Tile\",\"Tike\",\"Tine\",\"Time\",\"Tipe\",\"Tire\",\"Tite\",\"Byte\",\"Tobe\",\"Tode\",\"Toey\",\"Toes\",\"Toea\",\"Toed\",\"Tole\",\"Toke\",\"Tone\",\"Tome\",\"Tope\",\"Tore\",\"Tote\",\"Toze\",\"Tpke\",\"Trey\",\"Trek\",\"Tres\",\"Tret\",\"Tree\",\"Tref\",\"True\",\"Cate\",\"Tube\",\"Tule\",\"Tuke\",\"Tune\",\"Tume\",\"Tute\",\"Twae\",\"Twee\",\"Twie\",\"Celt\",\"Cent\",\"Cert\",\"Cest\",\"Ceti\",\"Cete\",\"Tyes\",\"Tyee\",\"Tyke\",\"Tyne\",\"Type\",\"Tyre\",\"Chet\",\"Cite\",\"Cote\",\"Ctge\",\"Cute\",\"Date\",\"Debt\",\"Deft\",\"Dent\",\"Dept\",\"Detn\",\"Deti\",\"Detd\",\"Diet\",\"Dite\",\"Dote\",\"Vent\",\"Vert\",\"Vets\",\"Veto\",\"Vest\",\"Veta\",\"Vext\",\"Duet\",\"Vite\",\"Voet\",\"Vote\",\"East\",\"Eats\",\"Eath\",\"Echt\",\"Edit\",\"Efts\",\"Emit\",\"Empt\",\"Entr\",\"Epit\",\"Eqpt\",\"Weet\",\"Weft\",\"Welt\",\"Went\",\"Wept\",\"Weta\",\"Erat\",\"West\",\"Wert\",\"Wets\",\"Erth\",\"Erst\",\"Esth\",\"Etas\",\"Etch\",\"Eten\",\"Eths\",\"Etna\",\"Eton\",\"Etua\",\"Etta\",\"Whet\",\"Etui\",\"Etym\",\"Wite\",\"Ewte\",\"Exit\",\"Expt\",\"Extg\",\"Exta\",\"Eyot\",\"Wote\",\"Fate\",\"Feat\",\"Feet\",\"Felt\",\"Fent\",\"Feta\",\"Fest\",\"Fets\",\"Fete\",\"Wyte\",\"Flet\"]}"],"result":{"duration":19874800,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":27,"name":"getWords API is invoked with scrambled characters 'e**t'","match":{"arguments":[{"val":"'e**t'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 200"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":28,"name":"response Status Code should be 200","match":{"arguments":[{"val":"200","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["JSON Object List Values: [Fret, Fute, Gaet, Gate, Geat, Geet, Gelt, Gent, Gest, Gets, Geta, Gite, Yate, Gote, Yeat, Yelt, Yeta, Yest, Yett, Yeth, Yeti, Gret, Yite, Gyte, Yote, Haet, Hate, Heat, Heft, Hent, Hert, Heth, Hete, Hest, Hewt, Hote, Zeta, Zest, Htel, Hyte, Item, Itel, Iten, Iter, Itea, Jert, Jets, Jete, Jest, Jute, Kate, Keat, Keet, Kelt, Kent, Kept, Keto, Ketu, Keta, Khet, Kite, Kmet, Knet, Kyte, Laet, Late, Leat, Lect, Leet, Left, Lent, Leto, Lets, Lett, Lete, Lest, Lite, Lote, Lute, Mate, Meat, Meet, Melt, Ment, Mest, Mets, Meta, Mete, Meth, Mite, Moet, Mote, Mtge, Mute, Nate, Neat, Neet, Nett, Nets, Neth, Nete, Neti, Nest, Neut, Next, Newt, Note, Nyet, Oket, Pate, Peat, Pelt, Pent, Pert, Pets, Peto, Petr, Pete, Pest, Piet, Poet, Pote, Pret, Quet, Rate, Rect, Reet, Regt, Reft, Reit, Rent, Rept, Rets, Rete, Retd, Rest, Rhet, Rite, Rote, Abet, Adet, Aget, Ahet, Sate, Anet, Ante, Seat, Sect, Seit, Selt, Sent, Sept, Seta, Sert, Sets, Sett, Seth, Aret, Sext, Arte, Ates, Aten, Atef, Ated, Atle, Atte, Aute, Site, Sket, Spet, Stge, Bate, Stey, Stew, Stet, Steg, Ster, Step, Sten, Stem, Stre, Stue, Stye, Suet, Beat, Beet, Belt, Bent, Best, Beth, Bete, Beta, Bert, Bets, Bite, Blet, Tade, Tace, Taen, Tael, Tale, Take, Tane, Tame, Tape, Tare, Tate, Tave, Bote, Tche, Teat, Tear, Teas, Teap, Tead, Tean, Teal, Team, Teak, Teda, Tech, Teco, Teck, Tebu, Teca, Teff, Teet, Teed, Teer, Tees, Teen, Teel, Teem, Teds, Tegg, Tegs, Tega, Teju, Teil, Tell, Telt, Tela, Teli, Tele, Tens, Tent, Tend, Teng, Temp, Tema, Tepe, Tepa, Terr, Tera, Terp, Term, Tern, Teri, Teth, Tete, Test, Tess, Tewa, Bret, Teuk, Text, Tews, Thae, Thew, They, Thee, Thed, Thea, Theb, Theo, Them, Then, Tide, Tice, Tier, Ties, Tied, Tien, Tige, Bute, Tile, Tike, Tine, Time, Tipe, Tire, Tite, Byte, Tobe, Tode, Toey, Toes, Toea, Toed, Tole, Toke, Tone, Tome, Tope, Tore, Tote, Toze, Tpke, Trey, Trek, Tres, Tret, Tree, Tref, True, Cate, Tube, Tule, Tuke, Tune, Tume, Tute, Twae, Twee, Twie, Celt, Cent, Cert, Cest, Ceti, Cete, Tyes, Tyee, Tyke, Tyne, Type, Tyre, Chet, Cite, Cote, Ctge, Cute, Date, Debt, Deft, Dent, Dept, Detn, Deti, Detd, Diet, Dite, Dote, Vent, Vert, Vets, Veto, Vest, Veta, Vext, Duet, Vite, Voet, Vote, East, Eats, Eath, Echt, Edit, Efts, Emit, Empt, Entr, Epit, Eqpt, Weet, Weft, Welt, Went, Wept, Weta, Erat, West, Wert, Wets, Erth, Erst, Esth, Etas, Etch, Eten, Eths, Etna, Eton, Etua, Etta, Whet, Etui, Etym, Wite, Ewte, Exit, Expt, Extg, Exta, Eyot, Wote, Fate, Feat, Feet, Felt, Fent, Feta, Fest, Fets, Fete, Wyte, Flet]"],"result":{"duration":290469300,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":29,"name":"response body should have jsonPath array 'fourLetterWords' containing value 'Test'","match":{"arguments":[{"val":"'fourLetterWords'","offset":41},{"val":"'Test'","offset":76}],"location":"com.ohz.steps.Steps.jsonPathShouldContainValue(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":19157100,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":30,"name":"all words at jsonPath 'oneLetterWords' should contain 1 characters","match":{"arguments":[{"val":"'oneLetterWords'","offset":22},{"val":"1","offset":54}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":13727000,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":31,"name":"all words at jsonPath 'twoLetterWords' should contain 2 characters","match":{"arguments":[{"val":"'twoLetterWords'","offset":22},{"val":"2","offset":54}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":14722100,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":32,"name":"all words at jsonPath 'threeLetterWords' should contain 3 characters","match":{"arguments":[{"val":"'threeLetterWords'","offset":22},{"val":"3","offset":56}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":13260600,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":33,"name":"all words at jsonPath 'fourLetterWords' should contain 4 characters","match":{"arguments":[{"val":"'fourLetterWords'","offset":22},{"val":"4","offset":55}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":12427200,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":34,"name":"response body should not contain jsonPath 'fiveLetterWords'","match":{"arguments":[{"val":"'fiveLetterWords'","offset":42}],"location":"com.ohz.steps.Steps.responseBodyShouldNotContainJsonPath(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"},{"name":"@Debug"}]}],"name":"Scenarios for GetWords API","description":"","id":"scenarios-for-getwords-api","keyword":"Feature","uri":"file:src/test/resources/features/GetWords.feature","tags":[{"name":"@Regression","type":"Tag","location":{"line":1,"column":1}},{"name":"@GetWords","type":"Tag","location":{"line":1,"column":13}}]},{"line":2,"elements":[{"start_timestamp":"2023-12-24T19:31:09.460Z","line":11,"name":"GetWords API invoked with invalid character '1'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/1","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":8552300,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '1'","match":{"arguments":[{"val":"'1'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.471Z","line":12,"name":"GetWords API invoked with invalid character '!'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/!","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6753200,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '!'","match":{"arguments":[{"val":"'!'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.480Z","line":13,"name":"GetWords API invoked with invalid character '@'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/@","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":4316300,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '@'","match":{"arguments":[{"val":"'@'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.488Z","line":14,"name":"GetWords API invoked with invalid character '$'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/$","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":5701300,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '$'","match":{"arguments":[{"val":"'$'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":1013200,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.496Z","line":15,"name":"GetWords API invoked with invalid character '%'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/%","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":5309700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '%'","match":{"arguments":[{"val":"'%'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":1371500,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.506Z","line":16,"name":"GetWords API invoked with invalid character '^'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/^","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":5801000,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '^'","match":{"arguments":[{"val":"'^'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.517Z","line":17,"name":"GetWords API invoked with invalid character '&'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/&","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6668600,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '&'","match":{"arguments":[{"val":"'&'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.526Z","line":18,"name":"GetWords API invoked with invalid character '('","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;9","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/(","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":8771200,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '('","match":{"arguments":[{"val":"'('","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.537Z","line":19,"name":"GetWords API invoked with invalid character ')'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;10","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/)","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":5768400,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters ')'","match":{"arguments":[{"val":"')'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.545Z","line":20,"name":"GetWords API invoked with invalid character '_'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;11","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/_","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":6568000,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '_'","match":{"arguments":[{"val":"'_'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.553Z","line":21,"name":"GetWords API invoked with invalid character '+'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;12","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/+","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":13623700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '+'","match":{"arguments":[{"val":"'+'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"duration":1212800,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.571Z","line":22,"name":"GetWords API invoked with invalid character '='","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;13","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/=","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":7690600,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters '='","match":{"arguments":[{"val":"'='","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.583Z","line":23,"name":"GetWords API invoked with invalid character ';'","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-invalid-character--<scrambledcharacters>-;;14","type":"scenario","keyword":"Scenario Outline","steps":[{"output":["API Invoked: http://localhost:8080/getWords/;","Response: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"duration":5324800,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":6,"name":"getWords API is invoked with scrambled characters ';'","match":{"arguments":[{"val":"';'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 400"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":7,"name":"response Status Code should be 400","match":{"arguments":[{"val":"400","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["Expected Response Body to contain: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}\r\nActual Response Body: {\"message\":\"Invalid Request: Only Alphabetic characters and '*' allowed.\"}"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":8,"name":"response body should contain '{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","match":{"arguments":[{"val":"'{\"message\":\"Invalid Request: Only Alphabetic characters and \\'*\\' allowed.\"}'","offset":29}],"location":"com.ohz.steps.Steps.responseBodyShouldContain(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]},{"start_timestamp":"2023-12-24T19:31:09.591Z","line":26,"name":"GetWords API invoked with valid characters","description":"","id":"scenarios-for-getwords-api-feature-2;getwords-api-invoked-with-valid-characters","type":"scenario","keyword":"Scenario","steps":[{"output":["API Invoked: http://localhost:8080/getWords/e**t","Response: {\"message\":\"Total words unscrambled from 'e**t': 1599\",\"oneLetterWords\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"],\"twoLetterWords\":[\"Aa\",\"Ab\",\"Ac\",\"Ad\",\"Ae\",\"Af\",\"Ag\",\"Ah\",\"Ai\",\"Ak\",\"Al\",\"Am\",\"An\",\"Ao\",\"Ap\",\"Aq\",\"Ar\",\"As\",\"At\",\"Av\",\"Aw\",\"Ax\",\"Ay\",\"Az\",\"Ba\",\"Bb\",\"Bd\",\"Be\",\"Bf\",\"Bg\",\"Bi\",\"Bk\",\"Bl\",\"Bm\",\"Bn\",\"Bo\",\"Bp\",\"Br\",\"Bs\",\"Bt\",\"Bu\",\"Bv\",\"Bx\",\"By\",\"Bz\",\"Ca\",\"Cb\",\"Cc\",\"Cd\",\"Ce\",\"Cf\",\"Cg\",\"Ch\",\"Ck\",\"Cl\",\"Cm\",\"Co\",\"Cp\",\"Cq\",\"Cr\",\"Cs\",\"Ct\",\"Cu\",\"Cv\",\"Cy\",\"Da\",\"Db\",\"Dc\",\"Dd\",\"De\",\"Dg\",\"Di\",\"Dj\",\"Dk\",\"Dl\",\"Dm\",\"Dn\",\"Do\",\"Dp\",\"Dr\",\"Ds\",\"Dt\",\"Du\",\"Dx\",\"Dy\",\"Dz\",\"Ea\",\"Ec\",\"Ed\",\"Ee\",\"Ef\",\"Eg\",\"Eh\",\"El\",\"Em\",\"En\",\"Eo\",\"Ep\",\"Eq\",\"Er\",\"Es\",\"Et\",\"Eu\",\"Ew\",\"Ex\",\"Ey\",\"Fa\",\"Fb\",\"Fc\",\"Fe\",\"Ff\",\"Fg\",\"Fi\",\"Fl\",\"Fm\",\"Fn\",\"Fo\",\"Fp\",\"Fr\",\"Fs\",\"Ft\",\"Fu\",\"Fv\",\"Fw\",\"Fy\",\"Fz\",\"Ga\",\"Gd\",\"Ge\",\"Gi\",\"Gl\",\"Gm\",\"Gn\",\"Go\",\"Gp\",\"Gr\",\"Gs\",\"Gt\",\"Gu\",\"Gv\",\"Ha\",\"Hb\",\"Hd\",\"He\",\"Hf\",\"Hg\",\"Hi\",\"Hl\",\"Hm\",\"Ho\",\"Hp\",\"Hq\",\"Hr\",\"Hs\",\"Ht\",\"Hu\",\"Hv\",\"Hw\",\"Hy\",\"Ia\",\"Ib\",\"Ic\",\"Id\",\"Ie\",\"If\",\"Ii\",\"Ik\",\"Il\",\"Im\",\"In\",\"Io\",\"Iq\",\"Ir\",\"Is\",\"It\",\"Iv\",\"Iw\",\"Ix\",\"Ja\",\"Jg\",\"Ji\",\"Jo\",\"Jr\",\"Js\",\"Jt\",\"Ju\",\"Ka\",\"Kb\",\"Kc\",\"Kg\",\"Ki\",\"Kl\",\"Km\",\"Kn\",\"Ko\",\"Kr\",\"Kt\",\"Kv\",\"Kw\",\"Ky\",\"La\",\"Lb\",\"Lc\",\"Ld\",\"Le\",\"Lf\",\"Lg\",\"Lh\",\"Li\",\"Ll\",\"Lm\",\"Ln\",\"Lo\",\"Lp\",\"Lr\",\"Ls\",\"Lt\",\"Lu\",\"Lv\",\"Lx\",\"Ly\",\"Ma\",\"Mb\",\"Mc\",\"Md\",\"Me\",\"Mf\",\"Mg\",\"Mh\",\"Mi\",\"Mk\",\"Ml\",\"Mm\",\"Mn\",\"Mo\",\"Mp\",\"Mr\",\"Ms\",\"Mt\",\"Mu\",\"Mv\",\"Mw\",\"My\",\"Na\",\"Nb\",\"Nd\",\"Ne\",\"Ng\",\"Ni\",\"Nj\",\"Nl\",\"Nm\",\"No\",\"Np\",\"Nr\",\"Ns\",\"Nt\",\"Nu\",\"Nv\",\"Ny\",\"Ob\",\"Oc\",\"Od\",\"Oe\",\"Of\",\"Og\",\"Oh\",\"Ok\",\"Ol\",\"Om\",\"On\",\"Op\",\"Or\",\"Os\",\"Ot\",\"Ow\",\"Ox\",\"Oy\",\"Oz\",\"Pa\",\"Pc\",\"Pd\",\"Pe\",\"Pf\",\"Pg\",\"Ph\",\"Pi\",\"Pk\",\"Pl\",\"Pm\",\"Po\",\"Pp\",\"Pq\",\"Pr\",\"Ps\",\"Pt\",\"Pu\",\"Qe\",\"Qh\",\"Ql\",\"Qm\",\"Qn\",\"Qp\",\"Qr\",\"Qs\",\"Qt\",\"Qu\",\"Qv\",\"Qy\",\"Ra\",\"Rc\",\"Rd\",\"Re\",\"Rf\",\"Rg\",\"Rh\",\"Rm\",\"Rn\",\"Ro\",\"Rs\",\"Rt\",\"Sa\",\"Sb\",\"Sc\",\"Sd\",\"Se\",\"Sf\",\"Sg\",\"Sh\",\"Si\",\"Sk\",\"Sl\",\"Sm\",\"Sn\",\"So\",\"Sp\",\"Sq\",\"Sr\",\"Ss\",\"St\",\"Su\",\"Sv\",\"Sw\",\"Ta\",\"Tb\",\"Tc\",\"Td\",\"Te\",\"Tg\",\"Th\",\"Ti\",\"Tk\",\"Tm\",\"Tn\",\"To\",\"Tp\",\"Tr\",\"Ts\",\"Tu\",\"Tv\",\"Tx\",\"Uc\",\"Ud\",\"Ug\",\"Uh\",\"Ui\",\"Um\",\"Un\",\"Up\",\"Ur\",\"Us\",\"Ut\",\"Ux\",\"Va\",\"Vb\",\"Vc\",\"Vd\",\"Vg\",\"Vi\",\"Vl\",\"Vo\",\"Vp\",\"Vr\",\"Vs\",\"Vt\",\"Vu\",\"Vv\",\"Wa\",\"Wb\",\"Wc\",\"Wd\",\"We\",\"Wf\",\"Wg\",\"Wh\",\"Wi\",\"Wk\",\"Wl\",\"Wm\",\"Wo\",\"Wr\",\"Ws\",\"Wt\",\"Wu\",\"Wy\",\"Xc\",\"Xd\",\"Xi\",\"Xr\",\"Xs\",\"Xu\",\"Xw\",\"Xx\",\"Ya\",\"Yd\",\"Ye\",\"Yi\",\"Ym\",\"Yn\",\"Yo\",\"Yr\",\"Ys\",\"Yt\",\"Za\",\"Zn\",\"Zo\",\"Zs\"],\"threeLetterWords\":[\"Abe\",\"Abt\",\"Ace\",\"Act\",\"Ade\",\"Aeq\",\"Aes\",\"Aer\",\"Aet\",\"Aft\",\"Age\",\"Agt\",\"Aht\",\"Ait\",\"Ake\",\"Ale\",\"Alt\",\"Ame\",\"Amt\",\"Ane\",\"Ant\",\"Ape\",\"Apt\",\"Are\",\"Art\",\"Ase\",\"Ast\",\"Ata\",\"Ate\",\"Ati\",\"Atm\",\"Att\",\"Ave\",\"Awe\",\"Axe\",\"Aye\",\"Bae\",\"Bat\",\"Bde\",\"Bea\",\"Bed\",\"Bec\",\"Bef\",\"Bee\",\"Beg\",\"Bel\",\"Ben\",\"Ber\",\"Bet\",\"Bes\",\"Bey\",\"Bit\",\"Bkt\",\"Boe\",\"Bot\",\"Bpt\",\"Btl\",\"Btu\",\"But\",\"Bvt\",\"Bye\",\"Cat\",\"Cee\",\"Cen\",\"Cep\",\"Che\",\"Cie\",\"Cit\",\"Coe\",\"Cot\",\"Cpt\",\"Cre\",\"Cst\",\"Ctf\",\"Cte\",\"Ctg\",\"Ctn\",\"Cto\",\"Ctr\",\"Cts\",\"Cue\",\"Cut\",\"Cwt\",\"Dae\",\"Dat\",\"Ddt\",\"Deb\",\"Dea\",\"Dec\",\"Def\",\"Dee\",\"Deg\",\"Dei\",\"Del\",\"Den\",\"Dem\",\"Dep\",\"Der\",\"Det\",\"Des\",\"Dev\",\"Dex\",\"Dew\",\"Dey\",\"Dft\",\"Die\",\"Dit\",\"Doe\",\"Dot\",\"Dpt\",\"Dtd\",\"Due\",\"Dwt\",\"Dye\",\"Ead\",\"Eam\",\"Ean\",\"Ear\",\"Eau\",\"Eat\",\"Ebb\",\"Ecb\",\"Eco\",\"Ecu\",\"Edh\",\"Edp\",\"Edo\",\"Eds\",\"Eel\",\"Een\",\"Eer\",\"Eff\",\"Efl\",\"Eft\",\"Efs\",\"Egg\",\"Ego\",\"Eir\",\"Eke\",\"Elb\",\"Ela\",\"Eld\",\"Elf\",\"Eli\",\"Ell\",\"Elk\",\"Elm\",\"Elt\",\"Els\",\"Eme\",\"Emf\",\"Emm\",\"Emp\",\"Ems\",\"Emu\",\"End\",\"Enc\",\"Eng\",\"Enl\",\"Ens\",\"Env\",\"Eof\",\"Eom\",\"Eon\",\"Eos\",\"Epa\",\"Epi\",\"Era\",\"Erd\",\"Erf\",\"Ere\",\"Erg\",\"Erk\",\"Ern\",\"Err\",\"Ers\",\"Esc\",\"Ese\",\"Esd\",\"Esq\",\"Esp\",\"Ess\",\"Esu\",\"Est\",\"Eta\",\"Etc\",\"Eth\",\"Ety\",\"Eva\",\"Eve\",\"Evg\",\"Ewe\",\"Exp\",\"Exr\",\"Ext\",\"Eye\",\"Eyl\",\"Eyn\",\"Eyr\",\"Fae\",\"Fat\",\"Fed\",\"Fec\",\"Fee\",\"Feh\",\"Fei\",\"Fen\",\"Fem\",\"Fer\",\"Fet\",\"Feu\",\"Few\",\"Fez\",\"Fey\",\"Fie\",\"Fit\",\"Fmt\",\"Foe\",\"Fot\",\"Frt\",\"Fth\",\"Fut\",\"Gae\",\"Gat\",\"Geb\",\"Gee\",\"Ged\",\"Gem\",\"Gel\",\"Geo\",\"Gen\",\"Ges\",\"Ger\",\"Get\",\"Gey\",\"Gez\",\"Gie\",\"Git\",\"Glt\",\"Got\",\"Gre\",\"Gtd\",\"Gtc\",\"Gte\",\"Gtt\",\"Gue\",\"Gut\",\"Gye\",\"Hae\",\"Hat\",\"Hed\",\"Hee\",\"Heh\",\"Hei\",\"Hel\",\"Hen\",\"Hem\",\"Hep\",\"Heo\",\"Her\",\"Het\",\"Hes\",\"Hex\",\"Hew\",\"Hey\",\"Hgt\",\"Hie\",\"Hit\",\"Hoe\",\"Hot\",\"Hts\",\"Hue\",\"Hut\",\"Hwt\",\"Hye\",\"Ice\",\"Ide\",\"Ife\",\"Ike\",\"Ile\",\"Int\",\"Ire\",\"Ise\",\"Ist\",\"Ita\",\"Itd\",\"Ito\",\"Its\",\"Ive\",\"Jat\",\"Jct\",\"Jed\",\"Jef\",\"Jee\",\"Jeg\",\"Jen\",\"Jem\",\"Jer\",\"Jet\",\"Jeu\",\"Jew\",\"Jnt\",\"Joe\",\"Jot\",\"Jut\",\"Kae\",\"Kat\",\"Kea\",\"Keb\",\"Kee\",\"Ked\",\"Keg\",\"Kef\",\"Ken\",\"Kep\",\"Ker\",\"Ket\",\"Key\",\"Kex\",\"Kie\",\"Kit\",\"Kue\",\"Kye\",\"Lat\",\"Lea\",\"Led\",\"Lee\",\"Leg\",\"Lei\",\"Lek\",\"Len\",\"Lep\",\"Leo\",\"Ler\",\"Let\",\"Les\",\"Lev\",\"Leu\",\"Lex\",\"Lew\",\"Ley\",\"Lie\",\"Lit\",\"Loe\",\"Lot\",\"Lst\",\"Ltr\",\"Lue\",\"Lut\",\"Lye\",\"Mae\",\"Mat\",\"Mea\",\"Mee\",\"Med\",\"Meg\",\"Mem\",\"Mel\",\"Meo\",\"Men\",\"Meq\",\"Mes\",\"Mer\",\"Meu\",\"Met\",\"Mew\",\"Mev\",\"Mgt\",\"Mit\",\"Mkt\",\"Moe\",\"Mot\",\"Mtd\",\"Mtg\",\"Mtn\",\"Mts\",\"Mtx\",\"Mut\",\"Nae\",\"Nat\",\"Neb\",\"Nea\",\"Ned\",\"Nef\",\"Nee\",\"Neg\",\"Nei\",\"Nek\",\"Nep\",\"Neo\",\"Net\",\"New\",\"Nit\",\"Not\",\"Nth\",\"Nut\",\"Nye\",\"Oat\",\"Obe\",\"Oct\",\"Ode\",\"Oes\",\"Oer\",\"Oft\",\"Oie\",\"Oke\",\"Ole\",\"One\",\"Ont\",\"Oot\",\"Ope\",\"Opt\",\"Ore\",\"Ort\",\"Ose\",\"Otc\",\"Oto\",\"Out\",\"Owe\",\"Owt\",\"Pat\",\"Pct\",\"Pea\",\"Ped\",\"Pee\",\"Peh\",\"Peg\",\"Pen\",\"Pep\",\"Per\",\"Pet\",\"Pes\",\"Pew\",\"Pht\",\"Pie\",\"Pit\",\"Pkt\",\"Pmt\",\"Poe\",\"Pot\",\"Ppt\",\"Pre\",\"Pst\",\"Pta\",\"Pte\",\"Ptg\",\"Ptp\",\"Pts\",\"Ptt\",\"Pty\",\"Put\",\"Pvt\",\"Pwt\",\"Pye\",\"Qat\",\"Qed\",\"Qtd\",\"Qto\",\"Qtr\",\"Qts\",\"Qty\",\"Que\",\"Rat\",\"Rct\",\"Reb\",\"Rea\",\"Red\",\"Rec\",\"Ref\",\"Ree\",\"Reh\",\"Reg\",\"Rei\",\"Rel\",\"Ren\",\"Rem\",\"Rep\",\"Req\",\"Ret\",\"Res\",\"Rev\",\"Rex\",\"Rew\",\"Rhe\",\"Rie\",\"Rit\",\"Rle\",\"Roe\",\"Rot\",\"Rpt\",\"Rte\",\"Rti\",\"Rtw\",\"Rue\",\"Rut\",\"Rye\",\"Sae\",\"Sat\",\"Sct\",\"Sea\",\"Sec\",\"See\",\"Sed\",\"Seg\",\"Sei\",\"Sem\",\"Sel\",\"Sen\",\"Seq\",\"Sep\",\"Ser\",\"Set\",\"Sew\",\"Sey\",\"Sex\",\"She\",\"Sht\",\"Sie\",\"Sit\",\"Slt\",\"Soe\",\"Sot\",\"Spt\",\"Sta\",\"Std\",\"Stg\",\"Stk\",\"Stm\",\"Str\",\"Stu\",\"Sty\",\"Sue\",\"Sye\",\"Tab\",\"Taa\",\"Tad\",\"Tae\",\"Tag\",\"Taj\",\"Tai\",\"Tal\",\"Tan\",\"Tam\",\"Tap\",\"Tao\",\"Tar\",\"Tat\",\"Tas\",\"Tav\",\"Tau\",\"Tax\",\"Taw\",\"Tay\",\"Tbs\",\"Tch\",\"Tck\",\"Tdr\",\"Tea\",\"Ted\",\"Tec\",\"Tef\",\"Tee\",\"Teg\",\"Tel\",\"Ten\",\"Tem\",\"Ter\",\"Tex\",\"Tew\",\"Tez\",\"Tfr\",\"Tgn\",\"Tgt\",\"Tha\",\"The\",\"Tho\",\"Thy\",\"Tib\",\"Tid\",\"Tic\",\"Tie\",\"Tig\",\"Til\",\"Tin\",\"Tim\",\"Tip\",\"Tit\",\"Tis\",\"Tiu\",\"Tji\",\"Tkt\",\"Tlo\",\"Tln\",\"Tlr\",\"Tmh\",\"Tng\",\"Tnt\",\"Tob\",\"Toa\",\"Tod\",\"Toe\",\"Tog\",\"Toi\",\"Tol\",\"Ton\",\"Tom\",\"Top\",\"Too\",\"Tor\",\"Tot\",\"Tos\",\"Tov\",\"Tou\",\"Tox\",\"Tow\",\"Toy\",\"Tpd\",\"Tpi\",\"Tph\",\"Tpk\",\"Tpm\",\"Tps\",\"Tra\",\"Trf\",\"Tri\",\"Trp\",\"Trs\",\"Trt\",\"Try\",\"Tsi\",\"Tsk\",\"Tsp\",\"Tst\",\"Tss\",\"Tty\",\"Tub\",\"Tua\",\"Tue\",\"Tug\",\"Tui\",\"Tun\",\"Tum\",\"Tup\",\"Tur\",\"Tut\",\"Tux\",\"Tuy\",\"Twa\",\"Twi\",\"Twp\",\"Two\",\"Txt\",\"Tye\",\"Tyg\",\"Typ\",\"Tyr\",\"Tyt\",\"Ugt\",\"Uit\",\"Uke\",\"Ule\",\"Ult\",\"Ume\",\"Ure\",\"Use\",\"Ust\",\"Uta\",\"Ute\",\"Uti\",\"Uts\",\"Utu\",\"Vat\",\"Vee\",\"Veg\",\"Vei\",\"Vel\",\"Ver\",\"Vet\",\"Vex\",\"Vie\",\"Voe\",\"Wae\",\"Wat\",\"Wea\",\"Web\",\"Wee\",\"Wed\",\"Wef\",\"Wei\",\"Wem\",\"Wen\",\"Wes\",\"Wer\",\"Wet\",\"Wey\",\"Wit\",\"Woe\",\"Wot\",\"Wut\",\"Wye\",\"Xat\",\"Xed\",\"Yat\",\"Yea\",\"Yee\",\"Yed\",\"Yeh\",\"Yeo\",\"Yen\",\"Yep\",\"Yes\",\"Yer\",\"Yet\",\"Yew\",\"Yex\",\"Yez\",\"Yoe\",\"Yot\",\"Zat\",\"Zea\",\"Zed\",\"Zee\",\"Zel\",\"Zek\",\"Zen\",\"Zep\",\"Zer\",\"Zit\"],\"fourLetterWords\":[\"Fret\",\"Fute\",\"Gaet\",\"Gate\",\"Geat\",\"Geet\",\"Gelt\",\"Gent\",\"Gest\",\"Gets\",\"Geta\",\"Gite\",\"Yate\",\"Gote\",\"Yeat\",\"Yelt\",\"Yeta\",\"Yest\",\"Yett\",\"Yeth\",\"Yeti\",\"Gret\",\"Yite\",\"Gyte\",\"Yote\",\"Haet\",\"Hate\",\"Heat\",\"Heft\",\"Hent\",\"Hert\",\"Heth\",\"Hete\",\"Hest\",\"Hewt\",\"Hote\",\"Zeta\",\"Zest\",\"Htel\",\"Hyte\",\"Item\",\"Itel\",\"Iten\",\"Iter\",\"Itea\",\"Jert\",\"Jets\",\"Jete\",\"Jest\",\"Jute\",\"Kate\",\"Keat\",\"Keet\",\"Kelt\",\"Kent\",\"Kept\",\"Keto\",\"Ketu\",\"Keta\",\"Khet\",\"Kite\",\"Kmet\",\"Knet\",\"Kyte\",\"Laet\",\"Late\",\"Leat\",\"Lect\",\"Leet\",\"Left\",\"Lent\",\"Leto\",\"Lets\",\"Lett\",\"Lete\",\"Lest\",\"Lite\",\"Lote\",\"Lute\",\"Mate\",\"Meat\",\"Meet\",\"Melt\",\"Ment\",\"Mest\",\"Mets\",\"Meta\",\"Mete\",\"Meth\",\"Mite\",\"Moet\",\"Mote\",\"Mtge\",\"Mute\",\"Nate\",\"Neat\",\"Neet\",\"Nett\",\"Nets\",\"Neth\",\"Nete\",\"Neti\",\"Nest\",\"Neut\",\"Next\",\"Newt\",\"Note\",\"Nyet\",\"Oket\",\"Pate\",\"Peat\",\"Pelt\",\"Pent\",\"Pert\",\"Pets\",\"Peto\",\"Petr\",\"Pete\",\"Pest\",\"Piet\",\"Poet\",\"Pote\",\"Pret\",\"Quet\",\"Rate\",\"Rect\",\"Reet\",\"Regt\",\"Reft\",\"Reit\",\"Rent\",\"Rept\",\"Rets\",\"Rete\",\"Retd\",\"Rest\",\"Rhet\",\"Rite\",\"Rote\",\"Abet\",\"Adet\",\"Aget\",\"Ahet\",\"Sate\",\"Anet\",\"Ante\",\"Seat\",\"Sect\",\"Seit\",\"Selt\",\"Sent\",\"Sept\",\"Seta\",\"Sert\",\"Sets\",\"Sett\",\"Seth\",\"Aret\",\"Sext\",\"Arte\",\"Ates\",\"Aten\",\"Atef\",\"Ated\",\"Atle\",\"Atte\",\"Aute\",\"Site\",\"Sket\",\"Spet\",\"Stge\",\"Bate\",\"Stey\",\"Stew\",\"Stet\",\"Steg\",\"Ster\",\"Step\",\"Sten\",\"Stem\",\"Stre\",\"Stue\",\"Stye\",\"Suet\",\"Beat\",\"Beet\",\"Belt\",\"Bent\",\"Best\",\"Beth\",\"Bete\",\"Beta\",\"Bert\",\"Bets\",\"Bite\",\"Blet\",\"Tade\",\"Tace\",\"Taen\",\"Tael\",\"Tale\",\"Take\",\"Tane\",\"Tame\",\"Tape\",\"Tare\",\"Tate\",\"Tave\",\"Bote\",\"Tche\",\"Teat\",\"Tear\",\"Teas\",\"Teap\",\"Tead\",\"Tean\",\"Teal\",\"Team\",\"Teak\",\"Teda\",\"Tech\",\"Teco\",\"Teck\",\"Tebu\",\"Teca\",\"Teff\",\"Teet\",\"Teed\",\"Teer\",\"Tees\",\"Teen\",\"Teel\",\"Teem\",\"Teds\",\"Tegg\",\"Tegs\",\"Tega\",\"Teju\",\"Teil\",\"Tell\",\"Telt\",\"Tela\",\"Teli\",\"Tele\",\"Tens\",\"Tent\",\"Tend\",\"Teng\",\"Temp\",\"Tema\",\"Tepe\",\"Tepa\",\"Terr\",\"Tera\",\"Terp\",\"Term\",\"Tern\",\"Teri\",\"Teth\",\"Tete\",\"Test\",\"Tess\",\"Tewa\",\"Bret\",\"Teuk\",\"Text\",\"Tews\",\"Thae\",\"Thew\",\"They\",\"Thee\",\"Thed\",\"Thea\",\"Theb\",\"Theo\",\"Them\",\"Then\",\"Tide\",\"Tice\",\"Tier\",\"Ties\",\"Tied\",\"Tien\",\"Tige\",\"Bute\",\"Tile\",\"Tike\",\"Tine\",\"Time\",\"Tipe\",\"Tire\",\"Tite\",\"Byte\",\"Tobe\",\"Tode\",\"Toey\",\"Toes\",\"Toea\",\"Toed\",\"Tole\",\"Toke\",\"Tone\",\"Tome\",\"Tope\",\"Tore\",\"Tote\",\"Toze\",\"Tpke\",\"Trey\",\"Trek\",\"Tres\",\"Tret\",\"Tree\",\"Tref\",\"True\",\"Cate\",\"Tube\",\"Tule\",\"Tuke\",\"Tune\",\"Tume\",\"Tute\",\"Twae\",\"Twee\",\"Twie\",\"Celt\",\"Cent\",\"Cert\",\"Cest\",\"Ceti\",\"Cete\",\"Tyes\",\"Tyee\",\"Tyke\",\"Tyne\",\"Type\",\"Tyre\",\"Chet\",\"Cite\",\"Cote\",\"Ctge\",\"Cute\",\"Date\",\"Debt\",\"Deft\",\"Dent\",\"Dept\",\"Detn\",\"Deti\",\"Detd\",\"Diet\",\"Dite\",\"Dote\",\"Vent\",\"Vert\",\"Vets\",\"Veto\",\"Vest\",\"Veta\",\"Vext\",\"Duet\",\"Vite\",\"Voet\",\"Vote\",\"East\",\"Eats\",\"Eath\",\"Echt\",\"Edit\",\"Efts\",\"Emit\",\"Empt\",\"Entr\",\"Epit\",\"Eqpt\",\"Weet\",\"Weft\",\"Welt\",\"Went\",\"Wept\",\"Weta\",\"Erat\",\"West\",\"Wert\",\"Wets\",\"Erth\",\"Erst\",\"Esth\",\"Etas\",\"Etch\",\"Eten\",\"Eths\",\"Etna\",\"Eton\",\"Etua\",\"Etta\",\"Whet\",\"Etui\",\"Etym\",\"Wite\",\"Ewte\",\"Exit\",\"Expt\",\"Extg\",\"Exta\",\"Eyot\",\"Wote\",\"Fate\",\"Feat\",\"Feet\",\"Felt\",\"Fent\",\"Feta\",\"Fest\",\"Fets\",\"Fete\",\"Wyte\",\"Flet\"]}"],"result":{"duration":14702300,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":27,"name":"getWords API is invoked with scrambled characters 'e**t'","match":{"arguments":[{"val":"'e**t'","offset":50}],"location":"com.ohz.steps.Steps.invokeGetWordsApiWithChars(java.lang.String)"},"keyword":"When "},{"output":["Actual Status Code: 200"],"result":{"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":28,"name":"response Status Code should be 200","match":{"arguments":[{"val":"200","offset":31}],"location":"com.ohz.steps.Steps.responseStatusCodeShouldBe(int)"},"keyword":"Then "},{"output":["JSON Object List Values: [Fret, Fute, Gaet, Gate, Geat, Geet, Gelt, Gent, Gest, Gets, Geta, Gite, Yate, Gote, Yeat, Yelt, Yeta, Yest, Yett, Yeth, Yeti, Gret, Yite, Gyte, Yote, Haet, Hate, Heat, Heft, Hent, Hert, Heth, Hete, Hest, Hewt, Hote, Zeta, Zest, Htel, Hyte, Item, Itel, Iten, Iter, Itea, Jert, Jets, Jete, Jest, Jute, Kate, Keat, Keet, Kelt, Kent, Kept, Keto, Ketu, Keta, Khet, Kite, Kmet, Knet, Kyte, Laet, Late, Leat, Lect, Leet, Left, Lent, Leto, Lets, Lett, Lete, Lest, Lite, Lote, Lute, Mate, Meat, Meet, Melt, Ment, Mest, Mets, Meta, Mete, Meth, Mite, Moet, Mote, Mtge, Mute, Nate, Neat, Neet, Nett, Nets, Neth, Nete, Neti, Nest, Neut, Next, Newt, Note, Nyet, Oket, Pate, Peat, Pelt, Pent, Pert, Pets, Peto, Petr, Pete, Pest, Piet, Poet, Pote, Pret, Quet, Rate, Rect, Reet, Regt, Reft, Reit, Rent, Rept, Rets, Rete, Retd, Rest, Rhet, Rite, Rote, Abet, Adet, Aget, Ahet, Sate, Anet, Ante, Seat, Sect, Seit, Selt, Sent, Sept, Seta, Sert, Sets, Sett, Seth, Aret, Sext, Arte, Ates, Aten, Atef, Ated, Atle, Atte, Aute, Site, Sket, Spet, Stge, Bate, Stey, Stew, Stet, Steg, Ster, Step, Sten, Stem, Stre, Stue, Stye, Suet, Beat, Beet, Belt, Bent, Best, Beth, Bete, Beta, Bert, Bets, Bite, Blet, Tade, Tace, Taen, Tael, Tale, Take, Tane, Tame, Tape, Tare, Tate, Tave, Bote, Tche, Teat, Tear, Teas, Teap, Tead, Tean, Teal, Team, Teak, Teda, Tech, Teco, Teck, Tebu, Teca, Teff, Teet, Teed, Teer, Tees, Teen, Teel, Teem, Teds, Tegg, Tegs, Tega, Teju, Teil, Tell, Telt, Tela, Teli, Tele, Tens, Tent, Tend, Teng, Temp, Tema, Tepe, Tepa, Terr, Tera, Terp, Term, Tern, Teri, Teth, Tete, Test, Tess, Tewa, Bret, Teuk, Text, Tews, Thae, Thew, They, Thee, Thed, Thea, Theb, Theo, Them, Then, Tide, Tice, Tier, Ties, Tied, Tien, Tige, Bute, Tile, Tike, Tine, Time, Tipe, Tire, Tite, Byte, Tobe, Tode, Toey, Toes, Toea, Toed, Tole, Toke, Tone, Tome, Tope, Tore, Tote, Toze, Tpke, Trey, Trek, Tres, Tret, Tree, Tref, True, Cate, Tube, Tule, Tuke, Tune, Tume, Tute, Twae, Twee, Twie, Celt, Cent, Cert, Cest, Ceti, Cete, Tyes, Tyee, Tyke, Tyne, Type, Tyre, Chet, Cite, Cote, Ctge, Cute, Date, Debt, Deft, Dent, Dept, Detn, Deti, Detd, Diet, Dite, Dote, Vent, Vert, Vets, Veto, Vest, Veta, Vext, Duet, Vite, Voet, Vote, East, Eats, Eath, Echt, Edit, Efts, Emit, Empt, Entr, Epit, Eqpt, Weet, Weft, Welt, Went, Wept, Weta, Erat, West, Wert, Wets, Erth, Erst, Esth, Etas, Etch, Eten, Eths, Etna, Eton, Etua, Etta, Whet, Etui, Etym, Wite, Ewte, Exit, Expt, Extg, Exta, Eyot, Wote, Fate, Feat, Feet, Felt, Fent, Feta, Fest, Fets, Fete, Wyte, Flet]"],"result":{"duration":14147700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":29,"name":"response body should have jsonPath array 'fourLetterWords' containing value 'Test'","match":{"arguments":[{"val":"'fourLetterWords'","offset":41},{"val":"'Test'","offset":76}],"location":"com.ohz.steps.Steps.jsonPathShouldContainValue(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":11747100,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":30,"name":"all words at jsonPath 'oneLetterWords' should contain 1 characters","match":{"arguments":[{"val":"'oneLetterWords'","offset":22},{"val":"1","offset":54}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":8362700,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":31,"name":"all words at jsonPath 'twoLetterWords' should contain 2 characters","match":{"arguments":[{"val":"'twoLetterWords'","offset":22},{"val":"2","offset":54}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":9742400,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":32,"name":"all words at jsonPath 'threeLetterWords' should contain 3 characters","match":{"arguments":[{"val":"'threeLetterWords'","offset":22},{"val":"3","offset":56}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":6952600,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":33,"name":"all words at jsonPath 'fourLetterWords' should contain 4 characters","match":{"arguments":[{"val":"'fourLetterWords'","offset":22},{"val":"4","offset":55}],"location":"com.ohz.steps.Steps.allWordsAtJsonPathShouldContainCharacters(java.lang.String,int)"},"keyword":"And "},{"result":{"duration":8067600,"status":"passed"},"before":[{"result":{"status":"passed"},"match":{"location":"com.ohz.steps.Steps.beforeStep(io.cucumber.java.Scenario)"}}],"line":34,"name":"response body should not contain jsonPath 'fiveLetterWords'","match":{"arguments":[{"val":"'fiveLetterWords'","offset":42}],"location":"com.ohz.steps.Steps.responseBodyShouldNotContainJsonPath(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@Regression"},{"name":"@GetWords"},{"name":"@Smoke"}]}],"name":"Scenarios for GetWords API Feature 2","description":"","id":"scenarios-for-getwords-api-feature-2","keyword":"Feature","uri":"file:src/test/resources/features/GetWords2Test.feature","tags":[{"name":"@Regression","type":"Tag","location":{"line":1,"column":1}},{"name":"@GetWords","type":"Tag","location":{"line":1,"column":13}}]}]